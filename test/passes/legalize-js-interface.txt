(module
 (type $FUNCSIG$j (func (result i64)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$i (func (result i32)))
 (type $legaltype$imported (func (result i32)))
 (import "env" "setTempRet0" (func $setTempRet0 (param i32)))
 (import "env" "getTempRet0" (func $getTempRet0 (result i32)))
 (import "env" "imported" (func $legalimport$imported (result i32)))
 (export "func" (func $legalstub$func))
 (export "imported" (func $legalstub$imported))
 (export "imported_again" (func $legalstub$imported))
 (func $func (; 3 ;) (type $FUNCSIG$j) (result i64)
  (drop
   (call $legalfunc$imported)
  )
  (unreachable)
 )
 (func $legalstub$func (; 4 ;) (result i32)
  (local $0 i64)
  (set_local $0
   (call $func)
  )
  (call $setTempRet0
   (i32.wrap/i64
    (i64.shr_u
     (get_local $0)
     (i64.const 32)
    )
   )
  )
  (i32.wrap/i64
   (get_local $0)
  )
 )
 (func $legalstub$imported (; 5 ;) (result i32)
  (local $0 i64)
  (set_local $0
   (call $legalfunc$imported)
  )
  (call $setTempRet0
   (i32.wrap/i64
    (i64.shr_u
     (get_local $0)
     (i64.const 32)
    )
   )
  )
  (i32.wrap/i64
   (get_local $0)
  )
 )
 (func $legalfunc$imported (; 6 ;) (result i64)
  (i64.or
   (i64.extend_u/i32
    (call $legalimport$imported)
   )
   (i64.shl
    (i64.extend_u/i32
     (call $getTempRet0)
    )
    (i64.const 32)
   )
  )
 )
)
(module
 (type $0 (func (result i32)))
 (type $1 (func (param i32)))
 (type $2 (func (result i64)))
 (export "func" (func $legalstub$func))
 (func $getTempRet0 (; 0 ;) (type $0) (result i32)
  (i32.const 10)
 )
 (func $setTempRet0 (; 1 ;) (type $1) (param $0 i32)
  (nop)
 )
 (func $func (; 2 ;) (type $2) (result i64)
  (i64.const 7)
 )
 (func $legalstub$func (; 3 ;) (result i32)
  (local $0 i64)
  (set_local $0
   (call $func)
  )
  (call $setTempRet0
   (i32.wrap/i64
    (i64.shr_u
     (get_local $0)
     (i64.const 32)
    )
   )
  )
  (i32.wrap/i64
   (get_local $0)
  )
 )
)
(module
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$i (func (result i32)))
 (import "env" "setTempRet0" (func $renamed_set (param i32)))
 (import "env" "getTempRet0" (func $renamed_get (result i32)))
 (func $func (; 2 ;) (type $FUNCSIG$i) (result i32)
  (call $renamed_set
   (i32.const 3)
  )
  (call $renamed_get)
 )
)
(module
)
